---
- name: Install base deps
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    update_cache: yes

- name: Install containerd
  shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" > /etc/apt/sources.list.d/docker.list
    apt-get update
    apt-get install -y containerd.io
    mkdir -p /etc/containerd
    containerd config default | tee /etc/containerd/config.toml
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
    systemctl enable --now containerd

- name: Add Kubernetes apt repo
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ k8s_version_repo }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s_version_repo }}/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
    apt-get update

- name: Install kube* packages
  apt:
    name: [kubeadm, kubelet, kubectl]
    state: present
    update_cache: yes

- name: Hold kube packages
  shell: "apt-mark hold kubeadm kubelet kubectl"

- name: Ensure sysctl for k8s
  copy:
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.bridge.bridge-nf-call-iptables=1
      net.bridge.bridge-nf-call-ip6tables=1
      net.ipv4.ip_forward=1
  notify: Reload sysctl

- name: Disable swap (runtime)
  command: swapoff -a
  changed_when: false

- name: Disable swap (fstab)
  replace:
    path: /etc/fstab
    regexp: '(^.*\sswap\s.*$)'
    replace: '# \1'

- name: Load kernel modules
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Modprobe overlay
  modprobe:
    name: overlay
    state: present

- name: Modprobe br_netfilter
  modprobe:
    name: br_netfilter
    state: present

- name: Enable kubelet
  systemd:
    name: kubelet
    enabled: yes

- name: Reload sysctl
  ansible.builtin.command: sysctl --system
  listen: "Reload sysctl"
